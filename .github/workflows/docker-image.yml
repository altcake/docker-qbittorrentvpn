name: Docker Image CI

on:
  schedule:
    - cron: '0 0 * * *'

jobs:
  check_version:
    runs-on: ubuntu-latest
    steps:
    - name: Install packages
      run: |
        apt install -y jq
    - name: Get latest qbittorrent version
      run: |
        QBITTORRENT_RELEASE=$(curl -sX GET "https://api.github.com/repos/qBittorrent/qBittorrent/tags" | jq '.[] | select(.name | index ("alpha") | not) | select(.name | index ("beta") | not) | select(.name | index ("rc") | not) | .name' | head -n 1 | tr -d '"' | cut -d '-' -f 2)
        echo $QBITTORRENT_RELEASE
    - name: Check if image exists for latest qbittorrent version
      run: |
        RESPONSE_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://hub.docker.com/v2/namespaces/amalayan/repositories/qbittorrentvpn-synology_3.10/tags/${{ QBITTORRENT_RELEASE }})
        echo $RESPONSE_CODE

        
  # build_and_push:
  #   name: Docker image build and push to Docker Hub
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       application-name: ['qbittorrentvpn-synology_3.10']

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3
    
  #   - name: Build version tagged Docker image
  #     run: docker build --file Dockerfile --tag ${{ secrets.DOCKER_USER }}/${{ matrix.application-name }}:${{ steps.package-version.outputs.current-version}} .

  #   - name: Build latest tagged Docker image
  #     run: docker build --file Dockerfile --tag ${{ secrets.DOCKER_USER }}/${{ matrix.application-name }} .
    
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v2
  #     with:
  #       username: ${{ secrets.DOCKER_USER }}
  #       password: ${{ secrets.DOCKER_TOKEN }}

  #   - name: Push version tagged Docker image to Docker Hub
  #     run: docker push ${{ secrets.DOCKER_USER }}/${{ matrix.application-name }}:${{ steps.package-version.outputs.current-version}}
    
  #   - name: Push latest tagged Docker image to Docker Hub
  #     run: docker push ${{ secrets.DOCKER_USER }}/${{ matrix.application-name }}
